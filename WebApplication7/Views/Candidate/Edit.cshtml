@model CandidateEditViewModel

<h2>Update Candidate @Model.Candidate.FirstName</h2>
<hr />

<form method="post" asp-controller="Candidate" asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Candidate.CandidateId" />

    <div class="mb-3">
        <label asp-for="Candidate.FirstName" class="form-label"></label>
        <input asp-for="Candidate.FirstName" class="form-control" readonly />
        <span asp-validation-for="Candidate.FirstName" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Candidate.LastName" class="form-label"></label>
        <input asp-for="Candidate.LastName" class="form-control" readonly />
        <span asp-validation-for="Candidate.LastName" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Candidate.Email" class="form-label"></label>
        <input asp-for="Candidate.Email" class="form-control" />
        <span asp-validation-for="Candidate.Email" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Candidate.Mobile" class="form-label"></label>
        <input asp-for="Candidate.Mobile" class="form-control" />
        <span asp-validation-for="Candidate.Mobile" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Candidate.CV" class="form-label"></label>
        <input asp-for="Candidate.CV" class="form-control" />
        <span asp-validation-for="Candidate.CV" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="form-label">Select Degrees</label>

        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
              
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @foreach (var degree in Model.AllDegrees)
                {
                    var lst = Model.SelectedListDegrees.Select(x => int.Parse(x.Value)).ToList();
                    <div class="form-check dropdown-item">
                        <input type="checkbox" class="form-check-input degree-checkbox"
                               value="@degree.Value" id="degree_@degree.Value"
                        @(lst.Contains(int.Parse(degree.Value)) ? "checked" : "")
                               onchange="updateSelectedDegrees()" />
                        <label class="form-check-label" for="degree_@degree.Value">
                        <label class="form-check-label" for="degree_@degree.Value">
                            @degree.Text
                        </label>
                    </div>
                }
            </div>
        </div>
        @* <input type="hidden" id="selectedDegrees" name="SelectedDegrees" /> *@
        <input type="hidden" id="newSelectedDegrees" name="newSelectedDegrees" />
        <input type="submit" value="Update candidate" class="btn btn-primary" />
</form>
    <a asp-controller="Candidate" asp-action="Index">Back to overview</a>
</div>



@section Scripts {
    <script>
        // Apply custom styles to the selected options



        function updateSelectedDegrees() {
            var selected = [];
            document.querySelectorAll('.degree-checkbox:checked').forEach(function (checkbox) {
                selected.push(checkbox.value);
            });

            // Store the selected values in the hidden input field
         
            //document.getElementById('selectedDegrees').value = selected.join(',');
            document.getElementById('newSelectedDegrees').value = selected.join(',');
        }
    </script>
}